name: Continuous Integration

on:
  pull_request:
    paths-ignore:
      - '**/README.md'
  push:
    branches:
      - 'release/**'
      - 'hotfix/**'
      - 'alpha-release/**'

jobs:

  check-all-modules-are-tested:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check all modules are tested
      run: ./cd/check_modules.sh

  build-javadoc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Build Javadoc
      run: |
        mvn -q clean install -Pquick -Dskip.jar-with-dependencies=true -Dshaded.jar.phase=true
        mvn -q javadoc:javadoc -Pquick

  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        modules:
          - name: Core
            values: :gaffer2,:core,:access,:cache,:common-util,:data,:exception,:graph,:operation,:serialisation,:store,:type
          - name: Accumulo
            values: :accumulo-store,:accumulo-rest
          - name: Hbase
            values: :hbase-store,:hbase-rest
          - name: Parquet
            values: :parquet-store,:parquet-rest
          - name: Federated-And-Map
            values: :integration-test,:federated-store,:map-store,:map-rest
          - name: REST
            values: :rest-api,:common-rest,:spring-rest,:core-rest,:store-implementation,:proxy-store
          - name: Examples
            values: :example,:basic,:basic-model,:basic-rest,:road-traffic,:road-traffic-model,:road-traffic-generators,:road-traffic-rest,:road-traffic-demo,:federated-demo
          - name: Big-Data-Libraries
            values: :flink-library,:hdfs-library,:spark,:spark-library,:spark-accumulo-library
          - name: Time-Library
            values: :library,:time-library
          - name: Caches
            values: :cache-library,:sketches-library,:bitmap-library,:hazelcast-cache-service,:jcs-cache-service
    runs-on: ${{ matrix.os }}

    env:
     MAVEN_OPTS: -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25

    steps:
    - uses: actions/checkout@v2

    - name: Reginald
      run: echo 'The branch name is' env.BRANCH_NAME

    - name: Setup JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/uk
        key: ${{matrix.modules.name}}-gaffer-dependencies

    - name: Install
      run: mvn -B -q clean install -P quick -pl ${{matrix.modules.values}} -am

    - name: Test
      run: mvn -B -q verify -P coverage -pl ${{matrix.modules.values}}

    - name: Upload Coverage
      uses: codecov/codecov-action@v2
